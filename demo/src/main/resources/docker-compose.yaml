version: "3.7"

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  minio:
    image: minio/minio
    entrypoint: sh
    command: >
      -c 'mkdir -p /data/test-bucket && minio server /data'
    ports:
      - 9000:9000
      - 9001:9001
    environment: #  Эта часть кода нам нужна, чтобы
      MINIO_ROOT_USER: 'USERNAME'        #  запустить пользовательскую консоль
      MINIO_ROOT_PASSWORD: 'PASSWORD'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: root
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./tmp/prometheus_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - "./grafana/grafana_datasource.yaml:/etc/grafana/provisioning/datasources/grafana_datasource.yaml"
      - "./grafana/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml"
      - "./grafana/dashboards:/var/lib/grafana/dashboards"
    depends_on:
      - prometheus
